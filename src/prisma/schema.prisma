// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model IID {
  id                   String               @id
  versionId            String               @default(uuid())
  updated              DateTime
  created              DateTime
  deactivated          Boolean?
  entityType           String?
  startDate            DateTime?
  endDate              DateTime?
  status               Int?
  stage                String?
  relayerNode          String?
  verifiableCredential String?
  credentials          String[]
  Controller           String[]
  Context              Json[]
  VerificationMethod   VerificationMethod[]
  Service              Service[]
  AccordedRight        AccordedRight[]
  LinkedResource       LinkedResource[]
  LinkedEntity         LinkedEntity[]
}

model VerificationMethod {
  id                   String   @id
  IID                  IID      @relation(fields: [iid], references: [id])
  iid                  String
  relationships        String[]
  type                 String
  controller           String
  verificationMaterial String
}

model Service {
  id              String @id
  IID             IID    @relation(fields: [iid], references: [id])
  iid             String
  type            String
  serviceEndpoint String
}

model AccordedRight {
  id        String @id
  IID       IID    @relation(fields: [iid], references: [id])
  iid       String
  type      String
  mechanism String
  service   String
}

model LinkedResource {
  id              String @id
  IID             IID    @relation(fields: [iid], references: [id])
  iid             String
  type            String
  description     String
  mediaType       String
  serviceEndpoint String
  proof           String
  encrypted       String
  right           String
}

model LinkedEntity {
  id           String @id
  IID          IID    @relation(fields: [iid], references: [id])
  iid          String
  relationship String
}

model DID {
  did        String       @id
  publicKey  String
  Credential Credential[]

  @@index([did])
}

model Credential {
  id       Int     @id @default(autoincrement())
  DID      DID     @relation(fields: [did], references: [did])
  did      String
  claimId  String
  claimKyc Boolean
  issuer   String
}

model Bond {
  bondDid           String              @id
  token             String
  name              String
  description       String
  creatorDid        String
  PriceEntry        PriceEntry[]
  AlphaChange       AlphaChange[]
  BondBuy           BondBuy[]
  ShareWithdrawal   ShareWithdrawal[]
  ReserveWithdrawal ReserveWithdrawal[]
  OutcomePayment    OutcomePayment[]
}

model PriceEntry {
  id      Int      @id @default(autoincrement())
  bond    Bond     @relation(fields: [bondDid], references: [bondDid])
  bondDid String
  time    DateTime
  denom   String
  price   Decimal
}

model BondBuy {
  id        Int    @id @default(autoincrement())
  bond      Bond   @relation(fields: [bondDid], references: [bondDid])
  bondDid   String
  buyerDid  String
  amount    String
  maxPrices String
}

model AlphaChange {
  id        Int    @id @default(autoincrement())
  bond      Bond   @relation(fields: [bondDid], references: [bondDid])
  bondDid   String
  rawValue  Json?
  height    String
  timestamp String
}

model OutcomePayment {
  id        Int    @id @default(autoincrement())
  bond      Bond   @relation(fields: [bondDid], references: [bondDid])
  bondDid   String
  rawValue  Json?
  senderDid String
  amount    String
  height    String
  timestamp String
}

model ReserveWithdrawal {
  id            Int    @id @default(autoincrement())
  bond          Bond   @relation(fields: [bondDid], references: [bondDid])
  bondDid       String
  rawValue      Json?
  transaction   Json?
  withdrawerDid String
  height        String
  timestamp     String
}

model ShareWithdrawal {
  id           Int    @id @default(autoincrement())
  bond         Bond   @relation(fields: [bondDid], references: [bondDid])
  bondDid      String
  rawValue     Json?
  transaction  Json?
  recipientDid String
  height       String
  timestamp    String
}

model Chain {
  chainId     String @id
  blockHeight Int

  @@index([chainId])
}

model Event {
  id          Int      @id @default(autoincrement())
  type        String
  attributes  Json[]
  blockHeight Int
  eventSource String
  eventIndex  Int[]
  timestamp   DateTime

  @@index([type])
}

model Stats {
  id                    Int      @id @default(autoincrement())
  totalServiceProviders Int
  totalProjects         Int
  totalEvaluationAgents Int
  totalInvestors        Int
  totalClaims           Int
  successfulClaims      Int
  submittedClaims       Int
  pendingClaims         Int
  rejectedClaims        Int
  claimLocations        String[]
}

model Project {
  projectDid              String   @id
  data                    Json?
  txHash                  String
  senderDid               String
  pubKey                  String
  status                  String?
  entityType              String?
  ixoStaked               Decimal
  ixoUsed                 Decimal
  createdOn               DateTime
  createdBy               String
  nodeDid                 String
  successfulClaims        Int
  rejectedClaims          Int
  evaluators              Int
  evaluatorsPending       Int
  serviceProviders        Int
  serviceProvidersPending Int
  investors               Int
  investorsPending        Int
  Agent                   Agent[]
  Claim                   Claim[]

  @@index([projectDid])
}

model Agent {
  agentDid   String  @id
  project    Project @relation(fields: [projectDid], references: [projectDid])
  projectDid String
  status     String
  role       String
}

model Claim {
  claimId         String  @id
  project         Project @relation(fields: [projectDid], references: [projectDid])
  projectDid      String
  claimTemplateId String
  status          String
}

model Transaction {
  id            Int     @id @default(autoincrement())
  blockHeight   Int
  type          String
  from          String?
  value         Json?
  fee           Json?
  signatures    Json?
  memo          String
  timeoutHeight String
}

model Block {
  height           Int      @id
  hash             String   @unique
  num_txs          Int      @default(0)
  total_gas        Int      @default(0)
  proposer_address String?
  timestamp        DateTime

  @@index([hash])
  @@index([proposer_address])
}

model WasmCode {
  code_id       Int    @id
  creator       String @default("")
  creation_time String @default("")
  height        Int

  @@index([creator])
}

model WasmContract {
  address       String @id
  code_id       Int
  creator       String @default("")
  admin         String @default("")
  label         String @default("")
  creation_time String @default("")
  height        Int
  json          Json?  @default("{}")

  @@index([code_id])
  @@index([creator])
}

model ExecMsg {
  id      Int    @id @default(autoincrement())
  sender  String
  address String
  funds   Json?
  json    Json?
}
